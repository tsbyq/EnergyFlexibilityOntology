evaluation_window:
  start: "2019-01-01T00:00:00Z"
  end: "2019-01-02T00:00:00Z"

peak_timestamps:
  manual_input: true          # If set to false, automatically detect the peak timestamp within the evaluation window
  values:                     # Can be a list 
    - "2019-01-01T12:00:00Z"
    - "2019-01-01T13:00:00Z"

data_source_type: "csv"
path_to_dataset: "path/to/dataset.csv"
data_reading_method: "pandas"

pandas_parsing_specs:
  timestamps:
    column_identifier: "Datetime"
    quantity: "time"
    dtype: "datetime"
    unit: null
  baseline_power_profile:
    column_identifier: "Baseline (kW)"
    quantity: "power"
    dtype: "float"
    unit: "kW"
  flexible_power_profile:
    column_identifier: "Flexible (kW)"
    quantity: "power"
    dtype: "float"
    unit: "kW"
  baseline_energy_profile:
    column_identifier: "Baseline (kWh)"
    quantity: "energy"
    dtype: "float"
    unit: "kWh"
  flexible_energy_profile:
    column_identifier: "Flexible (kWh)"
    quantity: "energy"
    dtype: "float"
    unit: "kWh"
  generic_quantity_profile:
    column_identifier: "Cost ($)"
    quantity: null
    dtype: "float"
    unit: null
  price_signal:
    column_identifier: "Price ($/kWh)"
    quantity: "cost / energy"
    dtype: "float"
    unit: "$/kWh"
  emission_factor:
    column_identifier: "Emission Factor (kgCO2e/kWh)"
    quantity: "mass / energy"
    dtype: "float"
    unit: "kgCO2e/kWh"

other_parsing_specs:
  # ... (Additional specifications can be added here)
